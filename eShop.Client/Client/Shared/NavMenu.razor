@using Microsoft.AspNetCore.Components.Authorization
@using SharedAPI.Data_Transfer;
@using eShop.Client.Client.HttpRepository;
@implements IDisposable
@inject ICategoryRepository category
@inject IShoppingCartService shoppingCartService
@inject NavigationManager navManager
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">eShop.Client</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <CascadingAuthenticationState>
        <AuthorizeView Roles="User">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="products">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Products
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="()=>expandSubNav = !expandSubNav">
                        <span class="oi oi-collapse-down" aria-hidden="true"></span> Categories
                    </NavLink>
                    </div>
                    @if (expandSubNav)
                    {
                        @if(Categories != null)
                        {
                            @foreach(var category in Categories)
                            {
                                <div class = "nav-item px-3">
                                    <NavLink class="nav-link expand-menu" @onclick="() => GoToCategory(category.Id)">
                                        <span>@category.Name</span>
                                    </NavLink>
                                </div>
                            }
                        }
                    }
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="cart">
                            <span class="fas fa-shopping-cart" aria-hidden="true"></span>&nbsp;Shopping Cart (<b>@shoppingCartItemsCount</b>)
                        </NavLink>
                    </div>
            </Authorized>
        </AuthorizeView>
        </CascadingAuthenticationState>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private List<CategoryDto> Categories = new();

    private int shoppingCartItemsCount = 0;

    private bool expandSubNav;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        shoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
        Categories = await category.GetCategories();
    }

    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemsCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        shoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void GoToCategory(Guid Id)
    {
        navManager.NavigateTo($"categories/{Id}/products");
    }
}
